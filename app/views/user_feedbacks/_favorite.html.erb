<!--
create feedback with a nil value, to keep it seperate from a comment
elsif they do have one find it, render the form with "like" as submit button
  patch => favorite AKA (update)
  then when they submit set it to favorite = true
else
  render the form with "unlike" as submit button
  sumbit the form with value false
end
-->
<!--
As soon as the sandwich show page is render,
an instance of favorite is created.
Regardless of whether a user comments or not,
the first thing will always be the nil valued
favorite instance. Then in the UserFeedbacksController#favorite
it will find_by and only get the first one.
Any comments made will never be touched
and will not refer to this favorite.
  -->

  <!-- to improve and make it better and add validations for commments
    remove favorites from the user_feeback model and make a seperate
    model where user has many favorite and sandwich has many Favorites
    and favorites belongs to user and sandwich. that will fix alot of issues
     and allow for further development with ease.
     Right now we allow for empty comments to accomodate the favorite
     and that can cause issues
     -->

<% @favorite = UserFeedback.find_by(user_id: @current_user.id, sandwich_id: @sandwich.id, comment: nil) %>
  <% if @favorite == nil %>
    <% @favorite = UserFeedback.create(user_id: @current_user.id, sandwich_id: @sandwich.id) %>
<% end %>

<% if @favorite.favorite == nil || @favorite.favorite == false %>
  <%= form_for @favorite, url:'/favorite', method: :patch do |f| %>
      <%= f.hidden_field :sandwich_id, value: @sandwich.id %>
      <%= f.hidden_field :favorite, value: true %>
      <p><%= f.submit "Like" %></p>
  <% end %>
<% elsif @favorite.favorite == true %>
  <%= form_for @favorite, url:'/favorite', method: :patch do |f| %>
      <%= f.hidden_field :sandwich_id, value: @sandwich.id %>
      <%= f.hidden_field :favorite, value: false %>
      <p><%= f.submit "Unlike" %></p>
  <% end %>
<% end %>
